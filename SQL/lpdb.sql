USE [master]
GO

/****** Object:  Database [LiberPrimus]    Script Date: 3/4/2024 8:18:50 PM ******/
DROP DATABASE [LiberPrimus]
GO

/****** Object:  Database [LiberPrimus]    Script Date: 3/4/2024 8:18:50 PM ******/
CREATE DATABASE [LiberPrimus]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'LiberPrimus', FILENAME = N'/var/opt/mssql/data/LiberPrimus.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'LiberPrimus_log', FILENAME = N'/var/opt/mssql/data/LiberPrimus_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF
GO

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [LiberPrimus].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO

ALTER DATABASE [LiberPrimus] SET ANSI_NULL_DEFAULT OFF 
GO

ALTER DATABASE [LiberPrimus] SET ANSI_NULLS OFF 
GO

ALTER DATABASE [LiberPrimus] SET ANSI_PADDING OFF 
GO

ALTER DATABASE [LiberPrimus] SET ANSI_WARNINGS OFF 
GO

ALTER DATABASE [LiberPrimus] SET ARITHABORT OFF 
GO

ALTER DATABASE [LiberPrimus] SET AUTO_CLOSE OFF 
GO

ALTER DATABASE [LiberPrimus] SET AUTO_SHRINK OFF 
GO

ALTER DATABASE [LiberPrimus] SET AUTO_UPDATE_STATISTICS ON 
GO

ALTER DATABASE [LiberPrimus] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO

ALTER DATABASE [LiberPrimus] SET CURSOR_DEFAULT  GLOBAL 
GO

ALTER DATABASE [LiberPrimus] SET CONCAT_NULL_YIELDS_NULL OFF 
GO

ALTER DATABASE [LiberPrimus] SET NUMERIC_ROUNDABORT OFF 
GO

ALTER DATABASE [LiberPrimus] SET QUOTED_IDENTIFIER OFF 
GO

ALTER DATABASE [LiberPrimus] SET RECURSIVE_TRIGGERS OFF 
GO

ALTER DATABASE [LiberPrimus] SET  DISABLE_BROKER 
GO

ALTER DATABASE [LiberPrimus] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO

ALTER DATABASE [LiberPrimus] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO

ALTER DATABASE [LiberPrimus] SET TRUSTWORTHY OFF 
GO

ALTER DATABASE [LiberPrimus] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO

ALTER DATABASE [LiberPrimus] SET PARAMETERIZATION SIMPLE 
GO

ALTER DATABASE [LiberPrimus] SET READ_COMMITTED_SNAPSHOT OFF 
GO

ALTER DATABASE [LiberPrimus] SET HONOR_BROKER_PRIORITY OFF 
GO

ALTER DATABASE [LiberPrimus] SET RECOVERY FULL 
GO

ALTER DATABASE [LiberPrimus] SET  MULTI_USER 
GO

ALTER DATABASE [LiberPrimus] SET PAGE_VERIFY CHECKSUM  
GO

ALTER DATABASE [LiberPrimus] SET DB_CHAINING OFF 
GO

ALTER DATABASE [LiberPrimus] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO

ALTER DATABASE [LiberPrimus] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO

ALTER DATABASE [LiberPrimus] SET DELAYED_DURABILITY = DISABLED 
GO

ALTER DATABASE [LiberPrimus] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO

ALTER DATABASE [LiberPrimus] SET QUERY_STORE = ON
GO

ALTER DATABASE [LiberPrimus] SET QUERY_STORE (OPERATION_MODE = READ_WRITE, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_STORAGE_SIZE_MB = 1000, QUERY_CAPTURE_MODE = AUTO, SIZE_BASED_CLEANUP_MODE = AUTO, MAX_PLANS_PER_QUERY = 200, WAIT_STATS_CAPTURE_MODE = ON)
GO

ALTER DATABASE [LiberPrimus] SET  READ_WRITE 
GO

USE [LiberPrimus]
GO

/****** Object:  Table [dbo].[COLOR_TOTIENT_SET]    Script Date: 3/4/2024 8:21:41 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[COLOR_TOTIENT_SET](
	[COLOR_TOTIENT_SET_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[TOTIENT_NUMBER] [bigint] NOT NULL,
	[LIBER_COLOR_ID] [bigint] NOT NULL,
 CONSTRAINT [PK_COLOR_TOTIENT_SET] PRIMARY KEY CLUSTERED 
(
	[COLOR_TOTIENT_SET_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [dbo].[LIBER_COLOR]    Script Date: 3/4/2024 8:21:41 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[LIBER_COLOR](
	[LIBER_COLOR_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[LIBER_PAGE_ID] [int] NOT NULL,
	[PIX_COLOR_ID] [bigint] NOT NULL,
	[LINE_ORIENTATION_ID] [int] NOT NULL,
	[COLOR_COUNT] [bigint] NOT NULL,
	[IS_PRIME] [bit] NOT NULL,
	[GEMETRIA_VALUE] [nvarchar](5) NULL,
	[PHI_VALUE] [bigint] NULL,
	[CHARACTER_VALUE] [nvarchar](5) NULL,
 CONSTRAINT [PK_LIBER_COLOR] PRIMARY KEY CLUSTERED 
(
	[LIBER_COLOR_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [dbo].[LIBER_PAGE]    Script Date: 3/4/2024 8:21:41 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[LIBER_PAGE](
	[LIBER_PAGE_ID] [int] IDENTITY(1,1) NOT NULL,
	[LIBER_PAGE_NAME] [nvarchar](50) NOT NULL,
	[LIBER_PAGE_SIG] [nvarchar](255) NOT NULL,
	[LIBER_PAGE_TOTAL_COLORS] [int] NOT NULL,
	[LIBER_PAGE_HEIGHT] [int] NOT NULL,
	[LIBER_PAGE_WIDTH] [int] NOT NULL,
 CONSTRAINT [PK_LIBER_PAGE] PRIMARY KEY CLUSTERED 
(
	[LIBER_PAGE_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [dbo].[LINE_COLOR_INFO]    Script Date: 3/4/2024 8:21:41 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[LINE_COLOR_INFO](
	[LINE_COLOR_INFO_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[LINE_NUMBER] [bigint] NOT NULL,
	[PIX_COLOR_ID] [bigint] NOT NULL,
	[LIBER_PAGE_ID] [int] NOT NULL,
	[LINE_ORIENTATION_ID] [int] NOT NULL,
	[LINE_COLOR_COUNT] [int] NOT NULL,
	[IS_PRIME] [bit] NOT NULL,
	[GEMETRIA_VALUE] [nvarchar](5) NULL,
	[PHI_VALUE] [bigint] NULL,
	[CHARACTER_VALUE] [nvarchar](5) NULL,
 CONSTRAINT [PK_LINE_COLOR_INFO] PRIMARY KEY CLUSTERED 
(
	[LINE_COLOR_INFO_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [dbo].[LINE_ORIENTATION]    Script Date: 3/4/2024 8:21:41 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[LINE_ORIENTATION](
	[LINE_ORIENTATION_ID] [int] IDENTITY(1,1) NOT NULL,
	[LINE_ORIENTATION_NAME] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_LINE_ORIENTATION] PRIMARY KEY CLUSTERED 
(
	[LINE_ORIENTATION_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [dbo].[PIX_COLOR]    Script Date: 3/4/2024 8:21:41 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[PIX_COLOR](
	[PIX_COLOR_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[PIX_COLOR_VALUE] [nvarchar](10) NULL,
 CONSTRAINT [PK_PIX_COLOR] PRIMARY KEY CLUSTERED 
(
	[PIX_COLOR_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [dbo].[PIXEL_POSITION_INFO]    Script Date: 3/4/2024 8:21:41 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[PIXEL_POSITION_INFO](
	[PIXEL_POSITION_INFO_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[PIXEL_POSITION_X] [bigint] NOT NULL,
	[PIXEL_POSITION_Y] [bigint] NOT NULL,
	[PIXEL_POSITION_CHANNELS] [int] NOT NULL,
	[PIX_COLOR_ID] [bigint] NOT NULL,
	[LIBER_PAGE_ID] [int] NOT NULL,
 CONSTRAINT [PK_PIXEL_POSITION_INFO] PRIMARY KEY CLUSTERED 
(
	[PIXEL_POSITION_INFO_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [dbo].[TOTIENT_SET]    Script Date: 3/4/2024 8:21:41 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[TOTIENT_SET](
	[TOTIENT_SET_ID] [bigint] IDENTITY(1,1) NOT NULL,
	[TOTIENT_NUMBER] [bigint] NOT NULL,
	[LINE_COLOR_INFO_ID] [bigint] NOT NULL,
 CONSTRAINT [PK_TOTIENT_SET] PRIMARY KEY CLUSTERED 
(
	[TOTIENT_SET_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[COLOR_TOTIENT_SET]  WITH CHECK ADD  CONSTRAINT [FK_COLOR_TOTIENT_SET_LIBER_COLOR] FOREIGN KEY([LIBER_COLOR_ID])
REFERENCES [dbo].[LIBER_COLOR] ([LIBER_COLOR_ID])
GO

ALTER TABLE [dbo].[COLOR_TOTIENT_SET] CHECK CONSTRAINT [FK_COLOR_TOTIENT_SET_LIBER_COLOR]
GO

ALTER TABLE [dbo].[LIBER_COLOR]  WITH CHECK ADD  CONSTRAINT [FK_LIBER_COLOR_LIBER_PAGE] FOREIGN KEY([LIBER_PAGE_ID])
REFERENCES [dbo].[LIBER_PAGE] ([LIBER_PAGE_ID])
GO

ALTER TABLE [dbo].[LIBER_COLOR] CHECK CONSTRAINT [FK_LIBER_COLOR_LIBER_PAGE]
GO

ALTER TABLE [dbo].[LIBER_COLOR]  WITH CHECK ADD  CONSTRAINT [FK_LIBER_COLOR_LINE_ORIENTATION] FOREIGN KEY([LINE_ORIENTATION_ID])
REFERENCES [dbo].[LINE_ORIENTATION] ([LINE_ORIENTATION_ID])
GO

ALTER TABLE [dbo].[LIBER_COLOR] CHECK CONSTRAINT [FK_LIBER_COLOR_LINE_ORIENTATION]
GO

ALTER TABLE [dbo].[LIBER_COLOR]  WITH CHECK ADD  CONSTRAINT [FK_LIBER_COLOR_PIX_COLOR] FOREIGN KEY([PIX_COLOR_ID])
REFERENCES [dbo].[PIX_COLOR] ([PIX_COLOR_ID])
GO

ALTER TABLE [dbo].[LIBER_COLOR] CHECK CONSTRAINT [FK_LIBER_COLOR_PIX_COLOR]
GO

ALTER TABLE [dbo].[LINE_COLOR_INFO]  WITH CHECK ADD  CONSTRAINT [FK_LINE_COLOR_INFO_LIBER_PAGE] FOREIGN KEY([LIBER_PAGE_ID])
REFERENCES [dbo].[LIBER_PAGE] ([LIBER_PAGE_ID])
GO

ALTER TABLE [dbo].[LINE_COLOR_INFO] CHECK CONSTRAINT [FK_LINE_COLOR_INFO_LIBER_PAGE]
GO

ALTER TABLE [dbo].[LINE_COLOR_INFO]  WITH CHECK ADD  CONSTRAINT [FK_LINE_COLOR_INFO_LINE_ORIENTATION] FOREIGN KEY([LINE_ORIENTATION_ID])
REFERENCES [dbo].[LINE_ORIENTATION] ([LINE_ORIENTATION_ID])
GO

ALTER TABLE [dbo].[LINE_COLOR_INFO] CHECK CONSTRAINT [FK_LINE_COLOR_INFO_LINE_ORIENTATION]
GO

ALTER TABLE [dbo].[LINE_COLOR_INFO]  WITH CHECK ADD  CONSTRAINT [FK_LINE_COLOR_INFO_PIX_COLOR] FOREIGN KEY([PIX_COLOR_ID])
REFERENCES [dbo].[PIX_COLOR] ([PIX_COLOR_ID])
GO

ALTER TABLE [dbo].[LINE_COLOR_INFO] CHECK CONSTRAINT [FK_LINE_COLOR_INFO_PIX_COLOR]
GO

ALTER TABLE [dbo].[PIXEL_POSITION_INFO]  WITH CHECK ADD  CONSTRAINT [FK_PIXEL_POSITION_INFO_LIBER_PAGE] FOREIGN KEY([LIBER_PAGE_ID])
REFERENCES [dbo].[LIBER_PAGE] ([LIBER_PAGE_ID])
GO

ALTER TABLE [dbo].[PIXEL_POSITION_INFO] CHECK CONSTRAINT [FK_PIXEL_POSITION_INFO_LIBER_PAGE]
GO

ALTER TABLE [dbo].[PIXEL_POSITION_INFO]  WITH CHECK ADD  CONSTRAINT [FK_PIXEL_POSITION_INFO_PIX_COLOR] FOREIGN KEY([PIX_COLOR_ID])
REFERENCES [dbo].[PIX_COLOR] ([PIX_COLOR_ID])
GO

ALTER TABLE [dbo].[PIXEL_POSITION_INFO] CHECK CONSTRAINT [FK_PIXEL_POSITION_INFO_PIX_COLOR]
GO

ALTER TABLE [dbo].[TOTIENT_SET]  WITH CHECK ADD  CONSTRAINT [FK_TOTIENT_SET_LINE_COLOR_INFO] FOREIGN KEY([LINE_COLOR_INFO_ID])
REFERENCES [dbo].[LINE_COLOR_INFO] ([LINE_COLOR_INFO_ID])
GO

ALTER TABLE [dbo].[TOTIENT_SET] CHECK CONSTRAINT [FK_TOTIENT_SET_LINE_COLOR_INFO]
GO

USE [LiberPrimus];
GO

IF OBJECT_ID('[dbo].[usp_COLOR_TOTIENT_SETSelect]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_COLOR_TOTIENT_SETSelect] 
END 
GO
CREATE PROC [dbo].[usp_COLOR_TOTIENT_SETSelect] 
    @COLOR_TOTIENT_SET_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  

	BEGIN TRAN

	SELECT [COLOR_TOTIENT_SET_ID], [TOTIENT_NUMBER], [LIBER_COLOR_ID] 
	FROM   [dbo].[COLOR_TOTIENT_SET] 
	WHERE  ([COLOR_TOTIENT_SET_ID] = @COLOR_TOTIENT_SET_ID OR @COLOR_TOTIENT_SET_ID IS NULL) 

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_COLOR_TOTIENT_SETInsert]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_COLOR_TOTIENT_SETInsert] 
END 
GO
CREATE PROC [dbo].[usp_COLOR_TOTIENT_SETInsert] 
    @TOTIENT_NUMBER bigint,
    @LIBER_COLOR_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN
	
	INSERT INTO [dbo].[COLOR_TOTIENT_SET] ([TOTIENT_NUMBER], [LIBER_COLOR_ID])
	SELECT @TOTIENT_NUMBER, @LIBER_COLOR_ID
	
	-- Begin Return Select <- do not remove
	SELECT [COLOR_TOTIENT_SET_ID], [TOTIENT_NUMBER], [LIBER_COLOR_ID]
	FROM   [dbo].[COLOR_TOTIENT_SET]
	WHERE  [COLOR_TOTIENT_SET_ID] = SCOPE_IDENTITY()
	-- End Return Select <- do not remove
               
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_COLOR_TOTIENT_SETUpdate]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_COLOR_TOTIENT_SETUpdate] 
END 
GO
CREATE PROC [dbo].[usp_COLOR_TOTIENT_SETUpdate] 
    @COLOR_TOTIENT_SET_ID bigint,
    @TOTIENT_NUMBER bigint,
    @LIBER_COLOR_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	UPDATE [dbo].[COLOR_TOTIENT_SET]
	SET    [TOTIENT_NUMBER] = @TOTIENT_NUMBER, [LIBER_COLOR_ID] = @LIBER_COLOR_ID
	WHERE  [COLOR_TOTIENT_SET_ID] = @COLOR_TOTIENT_SET_ID
	
	-- Begin Return Select <- do not remove
	SELECT [COLOR_TOTIENT_SET_ID], [TOTIENT_NUMBER], [LIBER_COLOR_ID]
	FROM   [dbo].[COLOR_TOTIENT_SET]
	WHERE  [COLOR_TOTIENT_SET_ID] = @COLOR_TOTIENT_SET_ID	
	-- End Return Select <- do not remove

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_COLOR_TOTIENT_SETDelete]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_COLOR_TOTIENT_SETDelete] 
END 
GO
CREATE PROC [dbo].[usp_COLOR_TOTIENT_SETDelete] 
    @COLOR_TOTIENT_SET_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	DELETE
	FROM   [dbo].[COLOR_TOTIENT_SET]
	WHERE  [COLOR_TOTIENT_SET_ID] = @COLOR_TOTIENT_SET_ID

	COMMIT
GO
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

IF OBJECT_ID('[dbo].[usp_LIBER_COLORSelect]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LIBER_COLORSelect] 
END 
GO
CREATE PROC [dbo].[usp_LIBER_COLORSelect] 
    @LIBER_COLOR_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  

	BEGIN TRAN

	SELECT [LIBER_COLOR_ID], [LIBER_PAGE_ID], [PIX_COLOR_ID], [LINE_ORIENTATION_ID], [COLOR_COUNT], [IS_PRIME], [GEMETRIA_VALUE], [PHI_VALUE], [CHARACTER_VALUE] 
	FROM   [dbo].[LIBER_COLOR] 
	WHERE  ([LIBER_COLOR_ID] = @LIBER_COLOR_ID OR @LIBER_COLOR_ID IS NULL) 

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LIBER_COLORInsert]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LIBER_COLORInsert] 
END 
GO
CREATE PROC [dbo].[usp_LIBER_COLORInsert] 
    @LIBER_PAGE_ID int,
    @PIX_COLOR_ID bigint,
    @LINE_ORIENTATION_ID int,
    @COLOR_COUNT bigint,
    @IS_PRIME bit,
    @GEMETRIA_VALUE nvarchar(5) = NULL,
    @PHI_VALUE bigint = NULL,
    @CHARACTER_VALUE nvarchar(5) = NULL
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN
	
	INSERT INTO [dbo].[LIBER_COLOR] ([LIBER_PAGE_ID], [PIX_COLOR_ID], [LINE_ORIENTATION_ID], [COLOR_COUNT], [IS_PRIME], [GEMETRIA_VALUE], [PHI_VALUE], [CHARACTER_VALUE])
	SELECT @LIBER_PAGE_ID, @PIX_COLOR_ID, @LINE_ORIENTATION_ID, @COLOR_COUNT, @IS_PRIME, @GEMETRIA_VALUE, @PHI_VALUE, @CHARACTER_VALUE
	
	-- Begin Return Select <- do not remove
	SELECT [LIBER_COLOR_ID], [LIBER_PAGE_ID], [PIX_COLOR_ID], [LINE_ORIENTATION_ID], [COLOR_COUNT], [IS_PRIME], [GEMETRIA_VALUE], [PHI_VALUE], [CHARACTER_VALUE]
	FROM   [dbo].[LIBER_COLOR]
	WHERE  [LIBER_COLOR_ID] = SCOPE_IDENTITY()
	-- End Return Select <- do not remove
               
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LIBER_COLORUpdate]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LIBER_COLORUpdate] 
END 
GO
CREATE PROC [dbo].[usp_LIBER_COLORUpdate] 
    @LIBER_COLOR_ID bigint,
    @LIBER_PAGE_ID int,
    @PIX_COLOR_ID bigint,
    @LINE_ORIENTATION_ID int,
    @COLOR_COUNT bigint,
    @IS_PRIME bit,
    @GEMETRIA_VALUE nvarchar(5) = NULL,
    @PHI_VALUE bigint = NULL,
    @CHARACTER_VALUE nvarchar(5) = NULL
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	UPDATE [dbo].[LIBER_COLOR]
	SET    [LIBER_PAGE_ID] = @LIBER_PAGE_ID, [PIX_COLOR_ID] = @PIX_COLOR_ID, [LINE_ORIENTATION_ID] = @LINE_ORIENTATION_ID, [COLOR_COUNT] = @COLOR_COUNT, [IS_PRIME] = @IS_PRIME, [GEMETRIA_VALUE] = @GEMETRIA_VALUE, [PHI_VALUE] = @PHI_VALUE, [CHARACTER_VALUE] = @CHARACTER_VALUE
	WHERE  [LIBER_COLOR_ID] = @LIBER_COLOR_ID
	
	-- Begin Return Select <- do not remove
	SELECT [LIBER_COLOR_ID], [LIBER_PAGE_ID], [PIX_COLOR_ID], [LINE_ORIENTATION_ID], [COLOR_COUNT], [IS_PRIME], [GEMETRIA_VALUE], [PHI_VALUE], [CHARACTER_VALUE]
	FROM   [dbo].[LIBER_COLOR]
	WHERE  [LIBER_COLOR_ID] = @LIBER_COLOR_ID	
	-- End Return Select <- do not remove

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LIBER_COLORDelete]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LIBER_COLORDelete] 
END 
GO
CREATE PROC [dbo].[usp_LIBER_COLORDelete] 
    @LIBER_COLOR_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	DELETE
	FROM   [dbo].[LIBER_COLOR]
	WHERE  [LIBER_COLOR_ID] = @LIBER_COLOR_ID

	COMMIT
GO
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

IF OBJECT_ID('[dbo].[usp_LIBER_PAGESelect]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LIBER_PAGESelect] 
END 
GO
CREATE PROC [dbo].[usp_LIBER_PAGESelect] 
    @LIBER_PAGE_ID int
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  

	BEGIN TRAN

	SELECT [LIBER_PAGE_ID], [LIBER_PAGE_NAME], [LIBER_PAGE_SIG], [LIBER_PAGE_TOTAL_COLORS], [LIBER_PAGE_HEIGHT], [LIBER_PAGE_WIDTH] 
	FROM   [dbo].[LIBER_PAGE] 
	WHERE  ([LIBER_PAGE_ID] = @LIBER_PAGE_ID OR @LIBER_PAGE_ID IS NULL) 

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LIBER_PAGEInsert]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LIBER_PAGEInsert] 
END 
GO
CREATE PROC [dbo].[usp_LIBER_PAGEInsert] 
    @LIBER_PAGE_NAME nvarchar(50),
    @LIBER_PAGE_SIG nvarchar(255),
    @LIBER_PAGE_TOTAL_COLORS int,
    @LIBER_PAGE_HEIGHT int,
    @LIBER_PAGE_WIDTH int
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN
	
	INSERT INTO [dbo].[LIBER_PAGE] ([LIBER_PAGE_NAME], [LIBER_PAGE_SIG], [LIBER_PAGE_TOTAL_COLORS], [LIBER_PAGE_HEIGHT], [LIBER_PAGE_WIDTH])
	SELECT @LIBER_PAGE_NAME, @LIBER_PAGE_SIG, @LIBER_PAGE_TOTAL_COLORS, @LIBER_PAGE_HEIGHT, @LIBER_PAGE_WIDTH
	
	-- Begin Return Select <- do not remove
	SELECT [LIBER_PAGE_ID], [LIBER_PAGE_NAME], [LIBER_PAGE_SIG], [LIBER_PAGE_TOTAL_COLORS], [LIBER_PAGE_HEIGHT], [LIBER_PAGE_WIDTH]
	FROM   [dbo].[LIBER_PAGE]
	WHERE  [LIBER_PAGE_ID] = SCOPE_IDENTITY()
	-- End Return Select <- do not remove
               
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LIBER_PAGEUpdate]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LIBER_PAGEUpdate] 
END 
GO
CREATE PROC [dbo].[usp_LIBER_PAGEUpdate] 
    @LIBER_PAGE_ID int,
    @LIBER_PAGE_NAME nvarchar(50),
    @LIBER_PAGE_SIG nvarchar(255),
    @LIBER_PAGE_TOTAL_COLORS int,
    @LIBER_PAGE_HEIGHT int,
    @LIBER_PAGE_WIDTH int
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	UPDATE [dbo].[LIBER_PAGE]
	SET    [LIBER_PAGE_NAME] = @LIBER_PAGE_NAME, [LIBER_PAGE_SIG] = @LIBER_PAGE_SIG, [LIBER_PAGE_TOTAL_COLORS] = @LIBER_PAGE_TOTAL_COLORS, [LIBER_PAGE_HEIGHT] = @LIBER_PAGE_HEIGHT, [LIBER_PAGE_WIDTH] = @LIBER_PAGE_WIDTH
	WHERE  [LIBER_PAGE_ID] = @LIBER_PAGE_ID
	
	-- Begin Return Select <- do not remove
	SELECT [LIBER_PAGE_ID], [LIBER_PAGE_NAME], [LIBER_PAGE_SIG], [LIBER_PAGE_TOTAL_COLORS], [LIBER_PAGE_HEIGHT], [LIBER_PAGE_WIDTH]
	FROM   [dbo].[LIBER_PAGE]
	WHERE  [LIBER_PAGE_ID] = @LIBER_PAGE_ID	
	-- End Return Select <- do not remove

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LIBER_PAGEDelete]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LIBER_PAGEDelete] 
END 
GO
CREATE PROC [dbo].[usp_LIBER_PAGEDelete] 
    @LIBER_PAGE_ID int
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	DELETE
	FROM   [dbo].[LIBER_PAGE]
	WHERE  [LIBER_PAGE_ID] = @LIBER_PAGE_ID

	COMMIT
GO
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

IF OBJECT_ID('[dbo].[usp_LINE_COLOR_INFOSelect]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LINE_COLOR_INFOSelect] 
END 
GO
CREATE PROC [dbo].[usp_LINE_COLOR_INFOSelect] 
    @LINE_COLOR_INFO_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  

	BEGIN TRAN

	SELECT [LINE_COLOR_INFO_ID], [LINE_NUMBER], [PIX_COLOR_ID], [LIBER_PAGE_ID], [LINE_ORIENTATION_ID], [LINE_COLOR_COUNT], [IS_PRIME], [GEMETRIA_VALUE], [PHI_VALUE], [CHARACTER_VALUE] 
	FROM   [dbo].[LINE_COLOR_INFO] 
	WHERE  ([LINE_COLOR_INFO_ID] = @LINE_COLOR_INFO_ID OR @LINE_COLOR_INFO_ID IS NULL) 

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LINE_COLOR_INFOInsert]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LINE_COLOR_INFOInsert] 
END 
GO
CREATE PROC [dbo].[usp_LINE_COLOR_INFOInsert] 
    @LINE_NUMBER bigint,
    @PIX_COLOR_ID bigint,
    @LIBER_PAGE_ID int,
    @LINE_ORIENTATION_ID int,
    @LINE_COLOR_COUNT int,
    @IS_PRIME bit,
    @GEMETRIA_VALUE nvarchar(5) = NULL,
    @PHI_VALUE bigint = NULL,
    @CHARACTER_VALUE nvarchar(5) = NULL
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN
	
	INSERT INTO [dbo].[LINE_COLOR_INFO] ([LINE_NUMBER], [PIX_COLOR_ID], [LIBER_PAGE_ID], [LINE_ORIENTATION_ID], [LINE_COLOR_COUNT], [IS_PRIME], [GEMETRIA_VALUE], [PHI_VALUE], [CHARACTER_VALUE])
	SELECT @LINE_NUMBER, @PIX_COLOR_ID, @LIBER_PAGE_ID, @LINE_ORIENTATION_ID, @LINE_COLOR_COUNT, @IS_PRIME, @GEMETRIA_VALUE, @PHI_VALUE, @CHARACTER_VALUE
	
	-- Begin Return Select <- do not remove
	SELECT [LINE_COLOR_INFO_ID], [LINE_NUMBER], [PIX_COLOR_ID], [LIBER_PAGE_ID], [LINE_ORIENTATION_ID], [LINE_COLOR_COUNT], [IS_PRIME], [GEMETRIA_VALUE], [PHI_VALUE], [CHARACTER_VALUE]
	FROM   [dbo].[LINE_COLOR_INFO]
	WHERE  [LINE_COLOR_INFO_ID] = SCOPE_IDENTITY()
	-- End Return Select <- do not remove
               
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LINE_COLOR_INFOUpdate]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LINE_COLOR_INFOUpdate] 
END 
GO
CREATE PROC [dbo].[usp_LINE_COLOR_INFOUpdate] 
    @LINE_COLOR_INFO_ID bigint,
    @LINE_NUMBER bigint,
    @PIX_COLOR_ID bigint,
    @LIBER_PAGE_ID int,
    @LINE_ORIENTATION_ID int,
    @LINE_COLOR_COUNT int,
    @IS_PRIME bit,
    @GEMETRIA_VALUE nvarchar(5) = NULL,
    @PHI_VALUE bigint = NULL,
    @CHARACTER_VALUE nvarchar(5) = NULL
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	UPDATE [dbo].[LINE_COLOR_INFO]
	SET    [LINE_NUMBER] = @LINE_NUMBER, [PIX_COLOR_ID] = @PIX_COLOR_ID, [LIBER_PAGE_ID] = @LIBER_PAGE_ID, [LINE_ORIENTATION_ID] = @LINE_ORIENTATION_ID, [LINE_COLOR_COUNT] = @LINE_COLOR_COUNT, [IS_PRIME] = @IS_PRIME, [GEMETRIA_VALUE] = @GEMETRIA_VALUE, [PHI_VALUE] = @PHI_VALUE, [CHARACTER_VALUE] = @CHARACTER_VALUE
	WHERE  [LINE_COLOR_INFO_ID] = @LINE_COLOR_INFO_ID
	
	-- Begin Return Select <- do not remove
	SELECT [LINE_COLOR_INFO_ID], [LINE_NUMBER], [PIX_COLOR_ID], [LIBER_PAGE_ID], [LINE_ORIENTATION_ID], [LINE_COLOR_COUNT], [IS_PRIME], [GEMETRIA_VALUE], [PHI_VALUE], [CHARACTER_VALUE]
	FROM   [dbo].[LINE_COLOR_INFO]
	WHERE  [LINE_COLOR_INFO_ID] = @LINE_COLOR_INFO_ID	
	-- End Return Select <- do not remove

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LINE_COLOR_INFODelete]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LINE_COLOR_INFODelete] 
END 
GO
CREATE PROC [dbo].[usp_LINE_COLOR_INFODelete] 
    @LINE_COLOR_INFO_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	DELETE
	FROM   [dbo].[LINE_COLOR_INFO]
	WHERE  [LINE_COLOR_INFO_ID] = @LINE_COLOR_INFO_ID

	COMMIT
GO
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

IF OBJECT_ID('[dbo].[usp_LINE_ORIENTATIONSelect]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LINE_ORIENTATIONSelect] 
END 
GO
CREATE PROC [dbo].[usp_LINE_ORIENTATIONSelect] 
    @LINE_ORIENTATION_ID int
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  

	BEGIN TRAN

	SELECT [LINE_ORIENTATION_ID], [LINE_ORIENTATION_NAME] 
	FROM   [dbo].[LINE_ORIENTATION] 
	WHERE  ([LINE_ORIENTATION_ID] = @LINE_ORIENTATION_ID OR @LINE_ORIENTATION_ID IS NULL) 

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LINE_ORIENTATIONInsert]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LINE_ORIENTATIONInsert] 
END 
GO
CREATE PROC [dbo].[usp_LINE_ORIENTATIONInsert] 
    @LINE_ORIENTATION_NAME nvarchar(50)
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN
	
	INSERT INTO [dbo].[LINE_ORIENTATION] ([LINE_ORIENTATION_NAME])
	SELECT @LINE_ORIENTATION_NAME
	
	-- Begin Return Select <- do not remove
	SELECT [LINE_ORIENTATION_ID], [LINE_ORIENTATION_NAME]
	FROM   [dbo].[LINE_ORIENTATION]
	WHERE  [LINE_ORIENTATION_ID] = SCOPE_IDENTITY()
	-- End Return Select <- do not remove
               
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LINE_ORIENTATIONUpdate]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LINE_ORIENTATIONUpdate] 
END 
GO
CREATE PROC [dbo].[usp_LINE_ORIENTATIONUpdate] 
    @LINE_ORIENTATION_ID int,
    @LINE_ORIENTATION_NAME nvarchar(50)
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	UPDATE [dbo].[LINE_ORIENTATION]
	SET    [LINE_ORIENTATION_NAME] = @LINE_ORIENTATION_NAME
	WHERE  [LINE_ORIENTATION_ID] = @LINE_ORIENTATION_ID
	
	-- Begin Return Select <- do not remove
	SELECT [LINE_ORIENTATION_ID], [LINE_ORIENTATION_NAME]
	FROM   [dbo].[LINE_ORIENTATION]
	WHERE  [LINE_ORIENTATION_ID] = @LINE_ORIENTATION_ID	
	-- End Return Select <- do not remove

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_LINE_ORIENTATIONDelete]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_LINE_ORIENTATIONDelete] 
END 
GO
CREATE PROC [dbo].[usp_LINE_ORIENTATIONDelete] 
    @LINE_ORIENTATION_ID int
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	DELETE
	FROM   [dbo].[LINE_ORIENTATION]
	WHERE  [LINE_ORIENTATION_ID] = @LINE_ORIENTATION_ID

	COMMIT
GO
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

IF OBJECT_ID('[dbo].[usp_PIX_COLORSelect]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_PIX_COLORSelect] 
END 
GO
CREATE PROC [dbo].[usp_PIX_COLORSelect] 
    @PIX_COLOR_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  

	BEGIN TRAN

	SELECT [PIX_COLOR_ID], [PIX_COLOR_VALUE] 
	FROM   [dbo].[PIX_COLOR] 
	WHERE  ([PIX_COLOR_ID] = @PIX_COLOR_ID OR @PIX_COLOR_ID IS NULL) 

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_PIX_COLORInsert]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_PIX_COLORInsert] 
END 
GO
CREATE PROC [dbo].[usp_PIX_COLORInsert] 
    @PIX_COLOR_VALUE nvarchar(10) = NULL
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN
	
	INSERT INTO [dbo].[PIX_COLOR] ([PIX_COLOR_VALUE])
	SELECT @PIX_COLOR_VALUE
	
	-- Begin Return Select <- do not remove
	SELECT [PIX_COLOR_ID], [PIX_COLOR_VALUE]
	FROM   [dbo].[PIX_COLOR]
	WHERE  [PIX_COLOR_ID] = SCOPE_IDENTITY()
	-- End Return Select <- do not remove
               
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_PIX_COLORUpdate]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_PIX_COLORUpdate] 
END 
GO
CREATE PROC [dbo].[usp_PIX_COLORUpdate] 
    @PIX_COLOR_ID bigint,
    @PIX_COLOR_VALUE nvarchar(10) = NULL
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	UPDATE [dbo].[PIX_COLOR]
	SET    [PIX_COLOR_VALUE] = @PIX_COLOR_VALUE
	WHERE  [PIX_COLOR_ID] = @PIX_COLOR_ID
	
	-- Begin Return Select <- do not remove
	SELECT [PIX_COLOR_ID], [PIX_COLOR_VALUE]
	FROM   [dbo].[PIX_COLOR]
	WHERE  [PIX_COLOR_ID] = @PIX_COLOR_ID	
	-- End Return Select <- do not remove

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_PIX_COLORDelete]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_PIX_COLORDelete] 
END 
GO
CREATE PROC [dbo].[usp_PIX_COLORDelete] 
    @PIX_COLOR_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	DELETE
	FROM   [dbo].[PIX_COLOR]
	WHERE  [PIX_COLOR_ID] = @PIX_COLOR_ID

	COMMIT
GO
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

IF OBJECT_ID('[dbo].[usp_PIXEL_POSITION_INFOSelect]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_PIXEL_POSITION_INFOSelect] 
END 
GO
CREATE PROC [dbo].[usp_PIXEL_POSITION_INFOSelect] 
    @PIXEL_POSITION_INFO_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  

	BEGIN TRAN

	SELECT [PIXEL_POSITION_INFO_ID], [PIXEL_POSITION_X], [PIXEL_POSITION_Y], [PIXEL_POSITION_CHANNELS], [PIX_COLOR_ID], [LIBER_PAGE_ID] 
	FROM   [dbo].[PIXEL_POSITION_INFO] 
	WHERE  ([PIXEL_POSITION_INFO_ID] = @PIXEL_POSITION_INFO_ID OR @PIXEL_POSITION_INFO_ID IS NULL) 

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_PIXEL_POSITION_INFOInsert]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_PIXEL_POSITION_INFOInsert] 
END 
GO
CREATE PROC [dbo].[usp_PIXEL_POSITION_INFOInsert] 
    @PIXEL_POSITION_X bigint,
    @PIXEL_POSITION_Y bigint,
    @PIXEL_POSITION_CHANNELS int,
    @PIX_COLOR_ID bigint,
    @LIBER_PAGE_ID int
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN
	
	INSERT INTO [dbo].[PIXEL_POSITION_INFO] ([PIXEL_POSITION_X], [PIXEL_POSITION_Y], [PIXEL_POSITION_CHANNELS], [PIX_COLOR_ID], [LIBER_PAGE_ID])
	SELECT @PIXEL_POSITION_X, @PIXEL_POSITION_Y, @PIXEL_POSITION_CHANNELS, @PIX_COLOR_ID, @LIBER_PAGE_ID
	
	-- Begin Return Select <- do not remove
	SELECT [PIXEL_POSITION_INFO_ID], [PIXEL_POSITION_X], [PIXEL_POSITION_Y], [PIXEL_POSITION_CHANNELS], [PIX_COLOR_ID], [LIBER_PAGE_ID]
	FROM   [dbo].[PIXEL_POSITION_INFO]
	WHERE  [PIXEL_POSITION_INFO_ID] = SCOPE_IDENTITY()
	-- End Return Select <- do not remove
               
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_PIXEL_POSITION_INFOUpdate]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_PIXEL_POSITION_INFOUpdate] 
END 
GO
CREATE PROC [dbo].[usp_PIXEL_POSITION_INFOUpdate] 
    @PIXEL_POSITION_INFO_ID bigint,
    @PIXEL_POSITION_X bigint,
    @PIXEL_POSITION_Y bigint,
    @PIXEL_POSITION_CHANNELS int,
    @PIX_COLOR_ID bigint,
    @LIBER_PAGE_ID int
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	UPDATE [dbo].[PIXEL_POSITION_INFO]
	SET    [PIXEL_POSITION_X] = @PIXEL_POSITION_X, [PIXEL_POSITION_Y] = @PIXEL_POSITION_Y, [PIXEL_POSITION_CHANNELS] = @PIXEL_POSITION_CHANNELS, [PIX_COLOR_ID] = @PIX_COLOR_ID, [LIBER_PAGE_ID] = @LIBER_PAGE_ID
	WHERE  [PIXEL_POSITION_INFO_ID] = @PIXEL_POSITION_INFO_ID
	
	-- Begin Return Select <- do not remove
	SELECT [PIXEL_POSITION_INFO_ID], [PIXEL_POSITION_X], [PIXEL_POSITION_Y], [PIXEL_POSITION_CHANNELS], [PIX_COLOR_ID], [LIBER_PAGE_ID]
	FROM   [dbo].[PIXEL_POSITION_INFO]
	WHERE  [PIXEL_POSITION_INFO_ID] = @PIXEL_POSITION_INFO_ID	
	-- End Return Select <- do not remove

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_PIXEL_POSITION_INFODelete]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_PIXEL_POSITION_INFODelete] 
END 
GO
CREATE PROC [dbo].[usp_PIXEL_POSITION_INFODelete] 
    @PIXEL_POSITION_INFO_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	DELETE
	FROM   [dbo].[PIXEL_POSITION_INFO]
	WHERE  [PIXEL_POSITION_INFO_ID] = @PIXEL_POSITION_INFO_ID

	COMMIT
GO
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

IF OBJECT_ID('[dbo].[usp_TOTIENT_SETSelect]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_TOTIENT_SETSelect] 
END 
GO
CREATE PROC [dbo].[usp_TOTIENT_SETSelect] 
    @TOTIENT_SET_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  

	BEGIN TRAN

	SELECT [TOTIENT_SET_ID], [TOTIENT_NUMBER], [LINE_COLOR_INFO_ID] 
	FROM   [dbo].[TOTIENT_SET] 
	WHERE  ([TOTIENT_SET_ID] = @TOTIENT_SET_ID OR @TOTIENT_SET_ID IS NULL) 

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_TOTIENT_SETInsert]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_TOTIENT_SETInsert] 
END 
GO
CREATE PROC [dbo].[usp_TOTIENT_SETInsert] 
    @TOTIENT_NUMBER bigint,
    @LINE_COLOR_INFO_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN
	
	INSERT INTO [dbo].[TOTIENT_SET] ([TOTIENT_NUMBER], [LINE_COLOR_INFO_ID])
	SELECT @TOTIENT_NUMBER, @LINE_COLOR_INFO_ID
	
	-- Begin Return Select <- do not remove
	SELECT [TOTIENT_SET_ID], [TOTIENT_NUMBER], [LINE_COLOR_INFO_ID]
	FROM   [dbo].[TOTIENT_SET]
	WHERE  [TOTIENT_SET_ID] = SCOPE_IDENTITY()
	-- End Return Select <- do not remove
               
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_TOTIENT_SETUpdate]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_TOTIENT_SETUpdate] 
END 
GO
CREATE PROC [dbo].[usp_TOTIENT_SETUpdate] 
    @TOTIENT_SET_ID bigint,
    @TOTIENT_NUMBER bigint,
    @LINE_COLOR_INFO_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	UPDATE [dbo].[TOTIENT_SET]
	SET    [TOTIENT_NUMBER] = @TOTIENT_NUMBER, [LINE_COLOR_INFO_ID] = @LINE_COLOR_INFO_ID
	WHERE  [TOTIENT_SET_ID] = @TOTIENT_SET_ID
	
	-- Begin Return Select <- do not remove
	SELECT [TOTIENT_SET_ID], [TOTIENT_NUMBER], [LINE_COLOR_INFO_ID]
	FROM   [dbo].[TOTIENT_SET]
	WHERE  [TOTIENT_SET_ID] = @TOTIENT_SET_ID	
	-- End Return Select <- do not remove

	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_TOTIENT_SETDelete]') IS NOT NULL
BEGIN 
    DROP PROC [dbo].[usp_TOTIENT_SETDelete] 
END 
GO
CREATE PROC [dbo].[usp_TOTIENT_SETDelete] 
    @TOTIENT_SET_ID bigint
AS 
	SET NOCOUNT ON 
	SET XACT_ABORT ON  
	
	BEGIN TRAN

	DELETE
	FROM   [dbo].[TOTIENT_SET]
	WHERE  [TOTIENT_SET_ID] = @TOTIENT_SET_ID

	COMMIT
GO
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

